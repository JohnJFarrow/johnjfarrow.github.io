(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{342:function(e,a,t){"use strict";t.r(a);var n=t(14),s=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",[e._v(e._s(this.$page.title))]),e._v(" "),a("h2",{attrs:{id:"lyra-experiences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lyra-experiences"}},[e._v("#")]),e._v(" Lyra Experiences")]),e._v(" "),a("p",[e._v('Levels are contained in a grouping of assets Lyra refers to as an "experience".  Each\nexperience contains assets for the overall game or for a specific way of playing\nthe game such as Elimination or Control.')]),e._v(" "),a("p",[e._v("The list of experiences is shown here:")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_001.png",alt:""}})]),e._v(" "),a("p",[e._v("Some experiences such as ShooterCore are used for in conjunction\nwith other experiences.  The intention is  that most experiences\ncorrespond to a a game mode such as deathmatch, and only one such game mode\nis loaded at a time.  The design here:")]),e._v(" "),a("ul",[a("li",[e._v("saves memory by only having the assets for one game more loaded at a time")]),e._v(" "),a("li",[e._v("makes game startup and selecting a game mode faster, because the assets\nused by specific game modes are not loaded until after that game mode has been selected.")])]),e._v(" "),a("p",[e._v("Some of the Lyra content is delivered in separate plugins, for\nexample the TopDownArena game mode is in the TopDownArena plugin.  The intention\nhere is that:")]),e._v(" "),a("ul",[a("li",[e._v("entire game modes i.e. experiences can be enabled and disabled by enabling and disabling plugins")]),e._v(" "),a("li",[e._v("new game modes can be added by developing them in plugins without needing to change the base Lyra project")])]),e._v(" "),a("p",[e._v('To add a new map in keeping with the existing approach, we would create a new plugin and\nput the map inside that plugin, just like the TopDownArena map can be found in the "TopDownArena Content\\Maps" folder of the TopDownArea plugin.')]),e._v(" "),a("p",[e._v("The plugin itself is configured to have the engine scan its assets when the plugin is loaded.  The TopDownArena plugin configuration is shown here:")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_002.png",alt:""}})]),e._v(" "),a("p",[e._v("We can see that under the Asset Manager | Primary Assets Types of Scan there is\na list of asset types and that list includes LyraExperienceDefinition\nand LyraUserFacingExperienceDefinition.")]),e._v(" "),a("p",[e._v("If we add a correctly configured plugin, the Lyra base project can display the new\nexperience because the new plugin contains a blueprint derived from the\n"),a("code",[e._v("LyraUserFacingExperienceDefinition")]),e._v(" base data asset.")]),e._v(" "),a("p",[e._v('Lyra iterates all the classes derived from this base class and presents them as available experiences in the UI.  An example of such as derived class can be found in the\n"TopDownArena Content\\System\\Playlists" folder.')]),e._v(" "),a("p",[e._v("ONLY REQUIRES LyraUserFacingExperienceDefinition ???? test this\nIn addition to a blueprint derived from "),a("code",[e._v("LyraExperienceDefinition")]),e._v(", the plugin\nalso needs a data asset derived from "),a("code",[e._v("LyraUserFacingExperienceDefinition")]),e._v('\nlike the one in "TopDownArena Content\\DA_TopDownArena_Splode".  This\nis a data asset shown here:')]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_003.png",alt:""}})]),e._v(" "),a("p",[e._v("This data asset:")]),e._v(" "),a("ul",[a("li",[e._v("is scanned when the plugin loads")]),e._v(" "),a("li",[e._v("specifies what map the plugin uses")]),e._v(" "),a("li",[e._v('specifies icons and titles which change the appearance and behaviour of the experience selection default map when Lyra is first run; for example if you check the "Is Default Experience"\nproperty then the TopDownArena experience will move to the start of the list.')])]),e._v(" "),a("h2",{attrs:{id:"steps-in-adding-a-new-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps-in-adding-a-new-map"}},[e._v("#")]),e._v(" Steps in adding a new map")]),e._v(" "),a("ul",[a("li",[e._v("create a new plugin of type Game Feature(Content Only) call it LyraNewMap")]),e._v(" "),a("li",[e._v("edit the plugin and add dependencies for GameplayAbilities,  LyraExampleContent and\nShooterCore, so it looks like this:")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_004.png",alt:""}})]),e._v(" "),a("p",[e._v('When the LyraNewMap plugin is created Unreal creates a directory "\\Plugins\\LyraNewMap Content"\nand in that directory creates a data asset called LyraNewMap.')]),e._v(" "),a("p",[e._v("Edit the LyraNewMap data asset amd add 3 items to Primary Asset Types to Scan:")]),e._v(" "),a("ul",[a("li",[e._v("index[0]:\n"),a("ul",[a("li",[e._v("Primary Asset Type: LyraExperienceDefinition")]),e._v(" "),a("li",[e._v("Asset Base Class: LyraExperienceDefinition")]),e._v(" "),a("li",[e._v("Has Blueprint Classes: true")]),e._v(" "),a("li",[e._v("Add Directory: System/Experiences")])])]),e._v(" "),a("li",[e._v("index[1]:\n"),a("ul",[a("li",[e._v("Primary Asset Type: Map")]),e._v(" "),a("li",[e._v("Asset Base Class: World")]),e._v(" "),a("li",[e._v("Add Directory: Maps")])])]),e._v(" "),a("li",[e._v("index[2]:\n"),a("ul",[a("li",[e._v("Primary Asset Type: LyraUserFacingExperienceDefinition")]),e._v(" "),a("li",[e._v("Asset Base Class: LyraUserFacingExperienceDefinition")]),e._v(" "),a("li",[e._v("Add Directory: System/Playlists")])])])]),e._v(" "),a("p",[e._v("To make the map:")]),e._v(" "),a("ul",[a("li",[e._v('in the "LyraNewMap Content" folder make a /Maps folder')]),e._v(" "),a("li",[e._v('in the Maps filder make a blank map called "L_NewWorld"\nopen the map and:\n'),a("ul",[a("li",[e._v("use Window | Env. Light Mixer to add lighting (just add one of everything)")]),e._v(" "),a("li",[e._v("add a plane 20x20 at 0,0,0")]),e._v(" "),a("li",[e._v("add a LyraPlayerStart at 0,0,110")])])])]),e._v(" "),a("p",[e._v("To tell Lyra about the new map we need to make an experience object:")]),e._v(" "),a("ul",[a("li",[e._v('in the "LyraNewMap Content" folder make a System folder')]),e._v(" "),a("li",[e._v("in the System folder make an Experiences folder")]),e._v(" "),a("li",[e._v("in the System folder make an Playlists folder")]),e._v(" "),a("li",[e._v("in the System/Experiences folder make a blueprint derived from LyraExperienceDefinition, call it BP_NewMapExperience.")])]),e._v(" "),a("p",[e._v("Note that BP_NewMapExperience is a blueprint derived from the data asset "),a("code",[e._v("LyraExperienceDefinition")]),e._v(" whereas\nobjects derived from the data asset "),a("code",[e._v("LyraUserFacingExperienceDefinition")]),e._v(" are data assets\nnot blueprints.  This is because in the Lyra project the default Unreal world settings object\n"),a("code",[e._v("AWorldSettings")]),e._v(" is extended by the class "),a("code",[e._v("ALyraWorldSettings")]),e._v(" which is used in the ./Config/DefaultEngine.ini file:")]),e._v(" "),a("blockquote",[a("p",[e._v("WorldSettingsClassName=/Script/LyraGame.LyraWorldSettings")])]),e._v(" "),a("p",[e._v("The ALyraWorldSettings class stores a default gameplay experience associated with each map.  This experience is declared like this:")]),e._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("UPROPERTY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("EditDefaultsOnly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Category"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("GameMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nTSoftClassPtr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("ULyraExperienceDefinition"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" DefaultGameplayExperience"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("A pointer like this can be assigned to something which has a parent class of "),a("code",[e._v("ULyraExperienceDefinition")]),e._v(".")]),e._v(" "),a("p",[e._v("You can see the difference between a blueprint here:")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_005.png",alt:""}})]),e._v(" "),a("p",[e._v("and a data asset:")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_006.png",alt:""}})]),e._v(" "),a("p",[e._v("A blueprint has a parent class, a data asset does not, so\na the "),a("code",[e._v("LyraExperienceDefinition")]),e._v(" object we create must be a blueprint not a data asset.")]),e._v(" "),a("p",[e._v("Next edit BP_NewMapExperience and:")]),e._v(" "),a("ul",[a("li",[e._v('add an entry to Game Features to Enable and set the value to "LyraNewMap".  This must be the name of the plugin you created.')])]),e._v(" "),a("p",[e._v("In the System/Playlists directory make a data asset using "),a("code",[e._v("LyraUserFacingExperienceDefinition")]),e._v("\nas the data asset instance, call it DA_NewMapUserExperience")]),e._v(" "),a("p",[e._v("Edit DA_NewMapUserExperience and:")]),e._v(" "),a("ul",[a("li",[e._v("set the Map ID to L_NewWorld (may need a restart to make this appear in list)")]),e._v(" "),a("li",[e._v("set the Experience ID to BP_NewMapExperience (may need a restart to make this appear in list)")]),e._v(" "),a("li",[e._v('set the Tile Title to "New Map Title"')])]),e._v(" "),a("p",[e._v("This should be enough to have Lyra load the map, although we have not done enough\nto make the player character appear yet.")]),e._v(" "),a("p",[e._v("Open the default Lyra map L_DefaultEditorOverview and press play.  You should see\nthe new experience appear on the opening screen and you should be able to\nselect the experience and enter the new map.")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/lyra_003_007.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://docs.unrealengine.com/5.0/en-US/asset-management-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Epic: Asset Management"),a("OutboundLink")],1),e._v("   (https://docs.unrealengine.com)"),a("br"),e._v(" "),a("a",{attrs:{href:"https://youtu.be/9MGHBU5eNu0?t=1235",target:"_blank",rel:"noopener noreferrer"}},[e._v("Epic: Asset Loading Best Practices"),a("OutboundLink")],1),e._v("  (https://youtu.be/)")])])}),[],!1,null,null,null);a.default=s.exports}}]);