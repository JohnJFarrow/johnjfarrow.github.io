(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{301:function(e,a,s){"use strict";s.r(a);var t=s(14),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",[e._v(e._s(this.$page.title))]),e._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),s("p",[e._v("ffmpeg is a cross-platform solution to record, convert, and stream audio and video. It can be used from Unreal Engine\nto change image formats, to record gameplay, and to convert content to and from various video formats.  Here\nI am using it just to show how an Unreal Engine plugin can be developed.")]),e._v(" "),s("p",[e._v("ffmpeg can be downloaded from the "),s("a",{attrs:{href:"https://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://ffmpeg.org/"),s("OutboundLink")],1),e._v(" or from "),s("a",{attrs:{href:"https://git.ffmpeg.org/ffmpeg.git",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://git.ffmpeg.org/ffmpeg.git"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("We download the source as a step in the build process.  This is important because\nwe use a Unix-like environment to configure and build the software, and\ndowloading using git from Windows can result in line-endings which are\nincompatible with Unix line-endings.")]),e._v(" "),s("p",[e._v("ffmpeg is cross-platform meaning it can be compiled for Windows, Linux, Macs and other\noperating systems and architectures.  It has a Unix-based build system which\nuses Unix tools for configuring the build and finding and building dependent libraries.  ffmpeg\nsupports many different video encoders and decoders, some of which are\ndownloaded separately from different websites if they are needed for the version you are building.")]),e._v(" "),s("h2",{attrs:{id:"approaches-to-building-ffmpeg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#approaches-to-building-ffmpeg"}},[e._v("#")]),e._v(" Approaches to building ffmpeg")]),e._v(" "),s("p",[e._v("We will be using a Unix-like terminal emulation approach to build ffmpeg.  There are many alternative approaches to building ffmpeg from different sites including:")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/rdp/ffmpeg-windows-build-helpers",target:"_blank",rel:"noopener noreferrer"}},[e._v("building in docker"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ShiftMediaProject/FFVS-Project-Generator",target:"_blank",rel:"noopener noreferrer"}},[e._v("parsing the Linux configure files to generate a Visual Studio .sln file"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/m-ab-s/media-autobuild_suite",target:"_blank",rel:"noopener noreferrer"}},[e._v("downloading one big script that configures the build, downloads all the build tools, and builds in one go"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("None of the above tools worked for me, whether because they were out of date or\nmy development system was not compatible I don't know.  I didn't have time to dig into them in any depth.")]),e._v(" "),s("h2",{attrs:{id:"using-msys2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-msys2"}},[e._v("#")]),e._v(" Using MSYS2")]),e._v(" "),s("p",[e._v("MSYS2 is a command line terminal which looks and behaves like a Unix terminal and\nsupports a collection of development tools.  It is not a virtual machine (VM) like VMWare, in that\nVMWare typically has its own disk space, whereas MSYS2 shares its file system with Windows, so you can\ncompile using the MSYS2 terminal and create executables and libraries are visible in the Windows\nfile system.")]),e._v(" "),s("p",[e._v("Another difference from a VM is that while you are inside the MSYS2 terminal you can use both Unix-style commands\nand Windows commands. We will be using:")]),e._v(" "),s("ul",[s("li",[e._v('a Unix-style "configure" command to create a makefile')]),e._v(" "),s("li",[e._v('followed by a Unix-style "make" command which')]),e._v(" "),s("li",[e._v("executes the Visual Studio C++ compiler")])]),e._v(" "),s("p",[e._v("All this makes package management and diagnosing problems much more confusing then just using one operating system.")]),e._v(" "),s("h2",{attrs:{id:"using-the-right-compiler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-right-compiler"}},[e._v("#")]),e._v(" Using the right compiler")]),e._v(" "),s("p",[e._v('MSYS2 uses the Microsoft C/C++ compiler which is configured in the current environment.  To create a 64 bit version\nof ffmpeg we need to open the 64 bit command line; specifically the "x86_x64 Cross Tools Command Prompt"'),s("br"),e._v("\nwhich is an option under Visual Studio 2022 on the start menu:")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/plugin_002.png",alt:""}})]),e._v(" "),s("p",[e._v('If you open the 32 bit "x64_x86 Cross Tools Command Prompt" everything below will work but you will end up with\na 32 bit version of ffmpeg which will not work with Unreal.')]),e._v(" "),s("h2",{attrs:{id:"preparation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparation"}},[e._v("#")]),e._v(" Preparation")]),e._v(" "),s("p",[e._v("Download and install MSYS2 from "),s("a",{attrs:{href:"https://www.msys2.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.msys2.org/"),s("OutboundLink")],1),e._v(".  I installed it to the d:\\tools\\msys64 directory so that is the path used in the examples below.")]),e._v(" "),s("p",[e._v("Install nasm from "),s("a",{attrs:{href:"https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/"),s("OutboundLink")],1),e._v(" to d:\\tools\\nasm.")]),e._v(" "),s("p",[e._v("Edit the msys2_shell.cmd command where MSYS2 is installed and uncomment one line, changing this line:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("rem set MSYS2_PATH_TYPE=inherit\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("to:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("set MSYS2_PATH_TYPE=inherit\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Run MSYS2 with this command")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("d:\\tools\\msys64\\msys2_shell.cmd -msys -use-full-path\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Change the "),s("code",[e._v("d:\\tools\\msys64")]),e._v(" part to wherever you installed MSYS2")]),e._v(" "),s("h2",{attrs:{id:"msys2-prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#msys2-prerequisites"}},[e._v("#")]),e._v(" MSYS2 Prerequisites")]),e._v(" "),s("p",[e._v("Running msys2_shell.cmd will open a command shell. Run these commands one at a time to download and install\ndevelopment tools (you can't run them\nall at once, some of them may want you to restart the MSYS2 terminal):")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("pacman -Syu\npacman -S make\npacman -S diffutils\npacman -S yasm\npacman -S nasm\npacman -S mingw64/mingw-w64-x86_64-aom\npacman -S git \npacman -S pkg-config\nmv /usr/bin/link.exe /usr/bin/link.exe.bak\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("h2",{attrs:{id:"setup-directories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-directories"}},[e._v("#")]),e._v(" Setup directories")]),e._v(" "),s("p",[e._v("Execute these commands:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cd /d/tools\nmkdir ffmpeg6\ncd ffmpeg6\nmkdir build sources\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h2",{attrs:{id:"building-x264"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-x264"}},[e._v("#")]),e._v(" Building x264")]),e._v(" "),s("p",[e._v("Many encoders or decoders which  can be included in an  ffmpeg build come from different projects and vendors.\nIf you want them to be part of your ffmpeg they might need to\nbe downloaded and built separately.")]),e._v(" "),s("p",[e._v('The x264 encoder is an example of one such module. To build it execute the commands below.\nThe "CC=cl" part of the configure command on line 9 sets the CC environment variable to tell the build process to use the Microsoft "cl" compiler command')]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cd /d/tools/ffmpeg6/sources\ngit clone --depth 1 https://code.videolan.org/videolan/x264.git\ncd x264\ncurl \"http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\" > config.guess\nsed -i 's/host_os = mingw/host_os = msys/' configure\ncd ../../build\nmkdir x264\ncd x264\nCC=cl ../../sources/x264/configure --prefix=./../../installed --enable-shared\nmake -j 16\nmake install\nmv ../../installed/lib/libx264.dll.lib ../../installed/lib/libx264.lib\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("h4",{attrs:{id:"checking-the-build-is-64-bits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checking-the-build-is-64-bits"}},[e._v("#")]),e._v(" Checking the build is 64 bits")]),e._v(" "),s("p",[e._v("Execute this command:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" file ../../installed/bin/libx264-164.dll\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("you should see something like:")]),e._v(" "),s("blockquote",[s("p",[e._v("../../installed/bin/libx264-164.dll: PE32+ executable (DLL) (GUI) x86-64, for MS Windows,")])]),e._v(" "),s("p",[e._v("which indicates it is a 64 bit build.")]),e._v(" "),s("p",[e._v("If you see this:")]),e._v(" "),s("blockquote",[s("p",[e._v("../../installed/bin/libx264-164.dll: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows")])]),e._v(" "),s("p",[e._v("You have accidently build a 32 bit version, probably because you have the wrong command prompt open.")]),e._v(" "),s("h2",{attrs:{id:"building-ffmpeg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-ffmpeg"}},[e._v("#")]),e._v(" Building ffmpeg")]),e._v(" "),s("p",[e._v("While still in the MSYS2 terminal do these steps to build ffpmeg command tools (ffmpeg, ffplay, ffprobe) and shared libraries which can be loaded\ninto Unreal Engine.")]),e._v(" "),s("h4",{attrs:{id:"get-the-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-the-source"}},[e._v("#")]),e._v(" Get the source:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cd /d/tools/ffmpeg6/sources\ngit clone --depth 1 git://source.ffmpeg.org/ffmpeg.git\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h4",{attrs:{id:"make-a-build-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-a-build-directory"}},[e._v("#")]),e._v(" Make a build directory:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cd ../build\nmkdir ffmpeg\ncd ffmpeg\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h4",{attrs:{id:"configure-the-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-the-build"}},[e._v("#")]),e._v(" Configure the build")]),e._v(" "),s("p",[e._v("Running a separate configuration pre-pass is a common approach in cross-platform software.  This step\nuses all the MSYS2 packages we installed using the pacman command earlier.")]),e._v(" "),s("p",[e._v("The command line below also:")]),e._v(" "),s("ul",[s("li",[e._v("sets the CC environment variable to tell the build process to use the Microsoft cl compiler command")]),e._v(" "),s("li",[e._v("adds a directory (../../installed/lib/pkgconfig) to the PKG_CONFIG_PATH environment variable so that the configure command can find the\n"),s("code",[e._v("x264.pc")]),e._v(" package configuration file which was created when we built the x264 project.")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('CC=cl PKG_CONFIG_PATH=$PKG_CONFIG_PATH:../../installed/lib/pkgconfig \\\n    ../../sources/ffmpeg/configure --prefix=../../installed \\\n    --toolchain=msvc --target-os=win64 --arch=x86_64 \\\n    --enable-x86asm --enable-asm --enable-shared  \\\n    --enable-gpl --enable-libx264 --enable-nonfree --enable-debug --disable-optimizations \\\n    --extra-ldflags="-LIBPATH:../../installed/lib" \\\n    --extra-cxxflags="-I../../installed/include/ -MTd -Od -Zi" \\\n    --extra-cflags="-I../../installed/include/ -MTd -Od -Zi" \n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("This configure command can take quite a while to run, sometime longer than the build itself.")]),e._v(" "),s("h4",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[e._v("#")]),e._v(" Build")]),e._v(" "),s("p",[e._v("Execute these make commands to do the build and install the libraries and commands.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("make -j 14\nmake install\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("The libraries which we built will be in /d/tools/ffmpeg6/installed/bin directory.")]),e._v(" "),s("h2",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://trac.ffmpeg.org/wiki/CompilationGuide",target:"_blank",rel:"noopener noreferrer"}},[e._v("ffmpeg compilation guide"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=OIYGjzmJ2GI&t=2598s",target:"_blank",rel:"noopener noreferrer"}},[e._v("ffmpeg build guide"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);